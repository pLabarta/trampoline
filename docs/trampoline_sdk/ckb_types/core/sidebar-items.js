initSidebarItems({"enum":[["CapacityError","Numeric errors."],["DepType","TODO(doc): @quake"],["ScriptHashType","Specifies how the script `code_hash` is used to match the script code and how to run the code."]],"macro":[["capacity_bytes","TODO(doc): @keroro520"]],"mod":[["cell","TODO(doc): @quake"],["error","The error types to unexpected out-points."],["hardfork","Hard forks related types."],["service","Types for CKB services."],["tx_pool","Tx-pool shared type define."]],"struct":[["BlockBuilder","An advanced builder for `BlockView`."],["BlockEconomicState","Includes the rewards details for a block and when the block is finalized."],["BlockExt","TODO(doc): @quake"],["BlockIssuance","Native token issuance."],["BlockReward","Details of miner rewards issued by block cellbase transaction."],["BlockView","A readonly and immutable struct which includes `Block` and its associated hashes."],["Capacity","CKB capacity."],["EpochExt","TODO(doc): @quake"],["EpochNumberWithFraction","Represents an epoch number with a fraction unit, it can be used to accurately represent the position for a block within an epoch."],["ExtraHashView","A readonly and immutable struct which includes extra hash and the decoupled parts of it."],["FeeRate","shannons per kilobytes"],["HeaderBuilder","An advanced builder for `HeaderView`."],["HeaderView","A readonly and immutable struct which includes `Header` and its hash."],["MinerReward","Miner reward."],["Ratio","Represents the ratio `numerator / denominator`, where `numerator` and `denominator` are both unsigned 64-bit integers."],["RationalU256","Represents the ratio `numerator / denominator`, where `numerator` and `denominator` are both unsigned 256-bit integers."],["TransactionBuilder","An advanced builder for `TransactionView`."],["TransactionInfo","TODO(doc): @quake"],["TransactionMeta","TODO(doc): @quake"],["TransactionMetaBuilder","TODO(doc): @quake"],["TransactionView","A readonly and immutable struct which includes `Transaction` and its associated hashes."],["UncleBlockVecView","A readonly and immutable struct which includes a vector of `UncleBlock`s and their hashes."],["UncleBlockView","A readonly and immutable struct which includes `UncleBlock` and its hash."]],"type":[["BlockNumber","Block number."],["CapacityResult","Numeric operation result."],["Cycle","Cycle number."],["EpochNumber","Epoch number."],["PublicKey","Public key. Itâ€™s a 512 bits fixed binary data."],["Version","Version number."]]});